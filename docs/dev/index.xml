<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Developer on Storefront Docs</title>
    <link>/openstorefront/dev/</link>
    <description>Recent content in Developer on Storefront Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 Nov 2017 12:01:25 -0700</lastBuildDate>
    
	<atom:link href="/openstorefront/dev/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Developer Guide</title>
      <link>/openstorefront/dev/developersguide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/openstorefront/dev/developersguide/</guid>
      <description>1. Internal Development See User Interface Guide, Server Code Standard, and Front-end Code Standards for Coding and Style guides.
1.1 Key Components Used The following components were used in the development:
 JDK 8
 Elasticsearch/Solr
 OpenAM (Configurable, default is property based log in.)
  The application is a JEE servlet-container webapp, so any JEE 6 servlet-container compliant server should work with some server configuration. The current deployment target is Tomcat 7.</description>
    </item>
    
    <item>
      <title>Architecture</title>
      <link>/openstorefront/dev/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/openstorefront/dev/architecture/</guid>
      <description>1. Client Architecture 1.1 Client Architecture Diagram Figure 1. Client Architecture Diagram
1.2 Client Details The client core structure is based on Ext.js which provides UI components and utilities. This reduces third-part dependencies significantly which in turn reduce maintenance, learning curve and improves quality and consistency.
Added to that is application specific overrides and high-level components created to facilitate re-use. The application is composed by stripes layouts with a top-level page and fragment tool pages.</description>
    </item>
    
    <item>
      <title>Front-end Code Standards</title>
      <link>/openstorefront/dev/front-end-code-standard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/openstorefront/dev/front-end-code-standard/</guid>
      <description>Style Currently supporting IE 11, EDGE, Chrome, Firefox (latest LTS release)
Safari, Opera or others (should work but, we are not testing for them)
Project Specific  Use the Ext.js docs. Look at them first for utility functions as they are normalize for the browser. (format, string manipulation, etc&amp;hellip;).
 When making reusable components don&amp;rsquo;t use &amp;ldquo;ID&amp;rdquo;s properties. Ids are OK on individual pages; must be unique; &amp;ldquo;ID&amp;rdquo; properties are Global.</description>
    </item>
    
    <item>
      <title>User Interface Guide</title>
      <link>/openstorefront/dev/uiguide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/openstorefront/dev/uiguide/</guid>
      <description>General Items  Remember this is a guide there can be variations as appropriate to the feature. Focus on the usability and having a clear workflow. Dialog bodies should be padded 10px Use toolbars for actions and enable/disable buttons to guide the user to valid actions. Add text to icons on button so it&amp;rsquo;s very clear as to what they are. (Where possible) Form action should be left to right with the Action on right and the anti-action on the left.</description>
    </item>
    
    <item>
      <title>Server Code Standard</title>
      <link>/openstorefront/dev/server-code-standard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/openstorefront/dev/server-code-standard/</guid>
      <description>Java Style Guide For most part applying the IDE Formating and it&amp;rsquo;s default warning are sufficient to follow and keep the code in-line. However, here is a lists of items to follow. Borrows ideas from https://google.github.io/styleguide/javaguide.html
Special escape sequences For any character that has a special escape sequence (\b, \t, \n, \f, \r, \&amp;ldquo;, \&amp;rsquo; and \), that sequence is used rather than the corresponding octal (e.g. \012) or Unicode (e.</description>
    </item>
    
  </channel>
</rss>